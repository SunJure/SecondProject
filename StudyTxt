
	----------------------------------------------------------------基本指令
	
	git clone https://xxx //将github网上的仓库下载项目
	
	git init //将当前路径设置为仓库
	
	git add 文件 //将文件添加到缓存区
	
	git commit //将缓存去提交到仓库
	
	git push //将仓库发布到github账号上
	
	git status //查看当前工作区--仓库的状态（新增，删除，修改...）
	
	git diff 文件 //对比文件不同之处
	
	git log //查看git日志,里面包含了commit的历史日志，用于回退某个版本
	
	git reflog //查看命令历史，以便确定要回到未来的哪个版本。
	
	git reset --hard HEAD^ //回退一个版本
	git reset --hard HEAD^^ //回退两个版本
	git reset --hard HEAD~100 //回退100个版本
	git reset --hard 3628164  //回退或前进到某个commit id 版本
	
	git checkout -- file //回滚某个文件（如果缓存区有该文件则从缓存区回滚，否则从仓库回滚）
	
	git rm file //删除文件，同时需要commit提交
	
	----------------------------------------------------------------合并分支相关指令
	
	git checkout -b name //创建一个name分支，并切换到该分支
	
	git branch name      //创建分支
	
	git branch -d name   //删除一个已经合并的分支
	
	git branch -D name   //强制删除一个没有合并的分支
	
	git checkout name    //切换分支 
	
	git branch  //查看分支，当前分支用*标识
	
	git merge name //合并指定分支到当前分支，可能存在冲突需要解决，需要手动解决冲突。
	
	git merge --no-ff -m "分支提交描述" name   //--no-ff参数，表示禁用Fast forward，好处是可以查看分支提交的log
	
	git stash //“储存”当前的工作现场，并退回最新的一个commit版本。
	
	git stash list //获取被“储存”的工作现场
	
	git stash apply [stash@{1}]//恢复工作现场,可以指定恢复某个现场
	
	git stash drop  [stash@{1}]//删除工作现场,可以指定删除某个现场
	
	git stash pop   [stash@{1}]//恢复并且删除某个工作现场
	
	
	
	
	
	